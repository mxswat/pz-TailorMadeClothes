module TailorMadeClothes {
	imports	{
		Base
	}

    item TailorMade {
        DisplayCategory = Literature,
        Weight	=	0.2,
        Type	=	Normal,
        DisplayName	= Tailor-Made Clothing,
        StaticModel = Magazine,
        WorldStaticModel = MagazineOpenGround,
    }

	item BodyMeasurements
    {
        DisplayCategory = Literature,
        Weight	=	0.01,
        Type	=	Normal,
        DisplayName	=	Body Measurements,
        Icon	=	BodyMeasurements,
        StaticModel = Magazine,
        WorldStaticModel = MagazineOpenGround,
    }

    recipe Make Clothing Tailor-Made
  	{
        keep [GetClothingToTailorMade],
        keep TailorMadeClothes.BodyMeasurements,
        keep [Recipe.GetItemTypes.SewingNeedle],
        keep [Recipe.GetItemTypes.Scissors],
        keep TapeMeasure,
        Thread=1,

        Result:TailorMade,
        OnCreate:OnCreateTailorMadeClothing,
        RemoveResultItem:true,
        Time: 300.0,
        SkillRequired:Tailoring=3,
        OnGiveXP:TMCGiveTailoringXP,
        AnimNode:Craft,	   	   
        Category:Tailoring,
    }
    
    recipe Take Self Body Measurements
  	{
        keep TapeMeasure,

        Result:BodyMeasurements,
        OnCreate:OnCreateSelfBodyMeasurement,
        Time:200.0,
        AnimNode:Craft,	   	   
        Category:Tailoring,
    }

    item TapeMeasure
    {
        DisplayCategory = Tool,
        Type	            =	        Normal,
        DisplayName			=		    Tape Measure,
        Icon				=			TapeMeasure,
        Weight				=			0.1,
        SurvivalGear = TRUE,
        ConsolidateOption = ContextMenu_Merge,
        WorldStaticModel = TapeMeasure,
    }

    model TapeMeasure
	{
		mesh = WorldItems/TapeMeasure,
		texture = WorldItems/TapeMeasure,
		scale = 0.4,
	}
}